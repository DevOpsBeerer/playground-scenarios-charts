🍺 DevopsBEERer Scenario-1 has been deployed successfully!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📖 SCENARIO: Basic Single Page Application (SPA) with OIDC
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎯 LEARNING OBJECTIVES:
   • Authorization Code Flow with PKCE
   • Token handling in browser applications  
   • OIDC authentication patterns
   • Secure API access with Bearer tokens

🌐 APPLICATION URLS:

{{- if .Values.frontoffice.enabled }}
   📱 Frontend Application:
      https://{{ .Values.frontoffice.ingress.host }}
      
   🔐 Login Flow:
      1. Visit the frontend URL above
      2. Click "Login" to start OIDC flow
      3. Authenticate with Keycloak
      4. Explore the beer catalog!
{{- end }}

{{- if .Values.api.enabled }}
   🔧 API Documentation:
      https://{{ .Values.api.ingress.host }}/docs
      
   🧪 API Health Check:
      https://{{ .Values.api.ingress.host }}/health
{{- end }}

   🆔 Keycloak Admin Console:
      {{ .Values.sso.publicUrl }}/admin
      
   🔑 OIDC Configuration:
      {{ .Values.sso.publicUrl }}/realms/{{ .Values.sso.realm }}/.well-known/openid_configuration

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔧 TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📋 Check pod status:
   kubectl get pods -l app.kubernetes.io/instance={{ .Release.Name }} -n {{ .Release.Namespace }}

📊 View logs:
{{- if .Values.api.enabled }}
   kubectl logs -l app.kubernetes.io/component=api -n {{ .Release.Namespace }} -f
{{- end }}
{{- if .Values.frontoffice.enabled }}
   kubectl logs -l app.kubernetes.io/component=frontoffice -n {{ .Release.Namespace }} -f
{{- end }}

🔍 Debug ingress:
   kubectl describe ingress -n {{ .Release.Namespace }}

🌐 Port forwarding (if ingress issues):
{{- if .Values.api.enabled }}
   kubectl port-forward svc/{{ .Values.api.name }} 3000:3000 -n {{ .Release.Namespace }}
   # Then access: http://localhost:3000
{{- end }}
{{- if .Values.frontoffice.enabled }}
   kubectl port-forward svc/{{ .Values.frontoffice.name }} 8080:8080 -n {{ .Release.Namespace }}
   # Then access: http://localhost:8080
{{- end }}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🧪 TESTING YOUR DEPLOYMENT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔄 Run Helm tests:
   helm test {{ .Release.Name }} -n {{ .Release.Namespace }}

🔍 Test API directly:
{{- if .Values.api.enabled }}
   curl https://{{ .Values.api.ingress.host }}/health
{{- end }}

🌐 Test frontend:
{{- if .Values.frontoffice.enabled }}
   curl -I https://{{ .Values.frontoffice.ingress.host }}
{{- end }}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎓 WHAT TO EXPLORE
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. 🔐 Authentication Flow:
   • Open browser developer tools (F12)
   • Navigate to the frontend application
   • Observe the OIDC redirect and token exchange
   • Check Network tab for OAuth2 calls

2. 🎫 Token Inspection:
   • After login, check browser storage for tokens
   • Use jwt.io to decode the access token
   • Observe token expiration and refresh behavior

3. 🛡️ API Security:
   • Try accessing API without authentication
   • Compare responses with and without Bearer token
   • Test different scopes and permissions

4. ⚙️ Keycloak Configuration:
   • Explore the realm configuration
   • Check client settings for PKCE
   • Review user attributes and claims

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📚 DOCUMENTATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📖 Learn more about this scenario:
   https://docs.devopsbeerer.local/scenarios/scenario-1

🔧 Helm chart configuration:
   https://docs.devopsbeerer.local/deployment/helm

🎯 Next scenarios to try:
   • Scenario-2: Traditional Web Application
   • Scenario-3: Mobile Application Flow  
   • Scenario-4: Microservices Architecture

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎉 Happy learning with DevopsBEERer! 
   Need help? Check the troubleshooting section above or visit our documentation.

Environment: {{ .Values.global.environment }}
Chart Version: {{ .Chart.Version }}
App Version: {{ .Chart.AppVersion }}
Release: {{ .Release.Name }}
Namespace: {{ .Release.Namespace }}